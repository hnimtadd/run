// @generated by protoc-gen-es v1.9.0
// @generated from file v1/types.proto (package proto.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message proto.v1.HTTPRequest
 */
export declare class HTTPRequest extends Message<HTTPRequest> {
  /**
   * @generated from field: bytes body = 1;
   */
  body: Uint8Array;

  /**
   * @generated from field: string method = 2;
   */
  method: string;

  /**
   * @generated from field: string url = 3;
   */
  url: string;

  /**
   * @generated from field: string endpoint_id = 4;
   */
  endpointId: string;

  /**
   * @generated from field: map<string, string> env = 5;
   */
  env: { [key: string]: string };

  /**
   * @generated from field: map<string, proto.v1.HeaderFields> header = 6;
   */
  header: { [key: string]: HeaderFields };

  /**
   * @generated from field: string runtime = 7;
   */
  runtime: string;

  /**
   * @generated from field: string deployment_id = 8;
   */
  deploymentId: string;

  /**
   * @generated from field: string id = 9;
   */
  id: string;

  constructor(data?: PartialMessage<HTTPRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "proto.v1.HTTPRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HTTPRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HTTPRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HTTPRequest;

  static equals(a: HTTPRequest | PlainMessage<HTTPRequest> | undefined, b: HTTPRequest | PlainMessage<HTTPRequest> | undefined): boolean;
}

/**
 * @generated from message proto.v1.HeaderFields
 */
export declare class HeaderFields extends Message<HeaderFields> {
  /**
   * @generated from field: repeated string fields = 1;
   */
  fields: string[];

  constructor(data?: PartialMessage<HeaderFields>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "proto.v1.HeaderFields";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HeaderFields;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HeaderFields;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HeaderFields;

  static equals(a: HeaderFields | PlainMessage<HeaderFields> | undefined, b: HeaderFields | PlainMessage<HeaderFields> | undefined): boolean;
}

/**
 * @generated from message proto.v1.HTTPResponse
 */
export declare class HTTPResponse extends Message<HTTPResponse> {
  /**
   * @generated from field: bytes body = 1;
   */
  body: Uint8Array;

  /**
   * @generated from field: int32 code = 2;
   */
  code: number;

  /**
   * @generated from field: string request_id = 3;
   */
  requestId: string;

  /**
   * @generated from field: map<string, proto.v1.HeaderFields> header = 4;
   */
  header: { [key: string]: HeaderFields };

  constructor(data?: PartialMessage<HTTPResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "proto.v1.HTTPResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HTTPResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HTTPResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HTTPResponse;

  static equals(a: HTTPResponse | PlainMessage<HTTPResponse> | undefined, b: HTTPResponse | PlainMessage<HTTPResponse> | undefined): boolean;
}

